# A string used to distinguish different Supabase projects on the same host. Defaults to the project's working directory name when running `supabase init`.
project_id = "french-tech-barcelona-offices"

[api]
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API endpoints.
# public and storage are always included.
schemas = ["public", "storage", "graphql_public"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# The maximum number of rows returned from a table or view, limits payload size for accidental or malicious requests.
max_rows = 1000

[db]
# Port to use for the local database URL.
port = 54322
# Port used by db diff command to initialize the shadow database.
shadow_port = 54320
# The database major version to use. This has to be the same as your remote database's. Run `SHOW server_version;` on the remote database to check.
major_version = 15

[db.pooler]
# Port to use for the local connection pooler.
port = 54329

[realtime]
# Set to false to disable realtime functionality.
enabled = true
# Bind realtime via either IPv4 or IPv6. (default: IPv4)
# ip_version = "IPv4"

[studio]
# Port to use for Supabase Studio.
port = 54323
# External URL of the API server that frontend connects to.
api_url = "http://localhost:54321"

# Email testing server. Emails sent with the local dev setup are not actually sent - rather, they
# are monitored, and you can view the emails that would have been sent from the web interface.
[inbucket]
# Port to use for the email testing server web interface.
port = 54324
# Uncomment to expose additional ports for testing user applications that send emails.
# smtp_port = 2500
# pop3_port = 1100

[storage]
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://localhost:3000"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604800 (one week).
jwt_expiry = 3600
# If disabled, the refresh token will never expire.
enable_refresh_token_rotation = true
# Allows refresh tokens to be reused after expiry, up to the specified interval in seconds.
# Requires enable_refresh_token_rotation = true.
refresh_token_reuse_interval = 10
# Allow/disallow new user signups to your project.
enable_signup = true

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Uncomment to customize email template
# [auth.email.template.invite]
# subject = "You have been invited"
# content_path = "./supabase/templates/invite.html"

[auth.sms]
# Allow/disallow new user signups via SMS to your project.
enable_signup = true
# If enabled, users need to confirm their phone number before signing in.
enable_confirmations = false

[auth.external.apple]
enabled = false
client_id = ""
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = ""

[auth.external.azure]
enabled = false
client_id = ""
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = ""

[auth.external.bitbucket]
enabled = false
client_id = ""
secret = ""

[auth.external.discord]
enabled = false
client_id = ""
secret = ""

[auth.external.facebook]
enabled = false
client_id = ""
secret = ""

[auth.external.github]
enabled = false
client_id = ""
secret = ""

[auth.external.gitlab]
enabled = false
client_id = ""
secret = ""

[auth.external.google]
enabled = false
client_id = ""
secret = ""

[auth.external.keycloak]
enabled = false
client_id = ""
secret = ""
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = ""

[auth.external.linkedin]
enabled = false
client_id = ""
secret = ""

[auth.external.notion]
enabled = false
client_id = ""
secret = ""

[auth.external.slack]
enabled = false
client_id = ""
secret = ""

[auth.external.spotify]
enabled = false
client_id = ""
secret = ""

[auth.external.twitch]
enabled = false
client_id = ""
secret = ""

[auth.external.twitter]
enabled = false
client_id = ""
secret = ""

[auth.external.workos]
enabled = false
client_id = ""
secret = ""
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = ""

[auth.external.zoom]
enabled = false
client_id = ""
secret = ""

# Use pre-defined map of claims that are namespaced by the provider. Works for Google, GitHub, GitLab, and Discord.
[auth.external.claims]
# The name of the claim from the JWT token that will be used as the user's display name.
display_name = ""
# The name of the claim from the JWT token that will be used as the user's avatar URL.
avatar_url = ""

# Configure one of the supported SMS providers: twilio, messagebird, textlocal, or vonage.
[auth.sms.twilio]
enabled = false
# Find these values in your Twilio Console.
account_sid = ""
message_service_sid = ""
# Leave empty to use the default Twilio phone number or specify a SID.
auth_token = ""
# The phone number to use for sending SMS, this will be shown in the SMS. Leave empty to use the default.
from = ""

[auth.sms.messagebird]
enabled = false
# Find these values in your MessageBird Console.
access_key = ""
# Leave empty to use the default MessageBird phone number or specify a SID.
message_service_id = ""
# The phone number to use for sending SMS, this will be shown in the SMS. Leave empty to use the default.
from = ""

[auth.sms.textlocal]
enabled = false
# Find these values in your TextLocal Console.
api_key = ""
# The phone number to use for sending SMS, this will be shown in the SMS. Leave empty to use the default.
from = ""

[auth.sms.vonage]
enabled = false
# Find these values in your Vonage Console.
api_key = ""
# Leave empty to use the default Vonage phone number or specify a SID.
api_secret = ""
# The phone number to use for sending SMS, this will be shown in the SMS. Leave empty to use the default.
from = ""

# Email provider configuration.
[auth.email.smtp]
host = ""
port = 587
user = ""
# The password for the SMTP user.
pass = ""
# The name of the admin user who will receive all emails.
admin_email = ""
# The name of the sender.
sender_name = ""

# Choose between `lite` and `full`.
[edge_runtime]
enabled = true
port = 54325
# Configure one of the supported AI providers: openai, anthropic, or local_ai.
[ai.openai]
enabled = false
# OpenAI API key.
api_key = ""
# OpenAI organization ID.
organization_id = ""

[ai.anthropic]
enabled = false
# Anthropic API key.
api_key = ""

[ai.local_ai]
enabled = false
# LocalAI API key.
api_key = ""
# LocalAI API base URL.
api_base_url = ""

# Configure one of the supported vector providers: openai, cohere, or local_ai.
[vector.openai]
enabled = false
# OpenAI API key.
api_key = ""
# OpenAI organization ID.
organization_id = ""

[vector.cohere]
enabled = false
# Cohere API key.
api_key = ""

[vector.local_ai]
enabled = false
# LocalAI API key.
api_key = ""
# LocalAI API base URL.
api_base_url = ""

# Logging configuration
[analytics]
enabled = false
port = 54327
vector_port = 54328
# Configure the log level for the analytics server. Supabase CLI will output logs at or above this level.
level = "info"

[experimental]
# Enable the new auth UI
enable_auth_ui = false
